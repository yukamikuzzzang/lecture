/*1강*/
스프링 프레임워크는 무엇인가?
스프링 컨테이너..!

*스프링 프레임워크
스프링 프레임워크 주요기능.. 

DI, AOP, MVC, JDBC
우리가 그동안 해왔던 프로그래밍에서 구조를 만들어나가는 방법론에 하나로써 사용.

스프링 프레임워크:
자바를 기반으로 만든 프레임워크
스프링이 주로 웹 application에 많이 이용한다는 것
JSP를 주로 많이 다루게 됩니다.

JSP를 학습을 해오고 Spring을 학습하는 것이 일반적인 순서.
JSP..> MVC(Model View Control), JDBC(Java DataBase Controller)
Model View Controll

Dependency Injection 필요할 때마다 데이터를 주입.
AOP 관점지향, 주요부분만 작업하고 공통부분을 뗐다 붙었다 할 수 있는 부분.
(참조:https://engkimbs.tistory.com/746)

프레임워크를 처음 접한다면..

JAVA를 이용한 프레임워크
-스프링 프레임워크
-안드로이드 프레임워크

프레임워크란?
개발자들이 개발을 하기 위한 업무를 추상적으로 정해놓은 틀!
작업을 하기 위해 처음부터 아무도움없이 개발에 나가는 방법 or 틀 없이 작업을 처음부터 하는 것. 작업의 효율성에 많은 차이가 생김.

자동차
	서울 - 경부 - 중부 - 선건제대교 - 거제도
네비없음 직접 가는 길을 지도나 이정표를 찾아서 가야함. 끝나는 곳을 인지하고 진입로를 탐색  
(1. 안전 운전 2. 진입로 탐색 이라는 작업을 매순간 해야함.)
개발자가 모든 일에 책임을 짐.

네비있음 모든 길을 안내함.
(1. 안전 운전만 하면 됨.)

프레임워크가 있으면
수많은 것들을 추상화 시켜놓고 대기함(틀). 해당 틀 안에서 내가 필요한 기능만 구현하면 끝!

프레임워크가 없으면
구현을 위해 고민하는 시간이 많아짐

*스프링 프레임워크의 모듈
프레임워크: 기능이 추상적으로 존재하는 틀.
이 때의 틀을 지칭하는 말: 모듈

스프링 프레임워크에서 제공하는 모듈

spring-core	스프링의 핵심 DI(Dependency Injection), IoC(Inversion of Control)를 제공
spring-app	AOP<관점지향프로그램> 구현 기능 제공
spring-jdbc	DB를 쉽게(적은 양의 코드)를 다룰 수 있는 기능 제공
spring-tx		스프링에서 제공하는 트랜잭션 관련 기능 제공
spring-webmvc	스프링에서 제공하는 컨트롤러(Controller)와 (모델:Model) 뷰(View)를 이용한 스프링 MVC 구현 기능 제공

스프링 프레임워크에서 제공하고 있는 모듈을 사용하려면, 모듈에 대한 의존설정을 개발 프로젝트에 XML 파일등을 이용해서 개발자가 직접하면 된다.

스프링 코어라는 핵심적인 모듈을 사용해야함.
이 모듈을 사용하려면..? 모듈 = 코드로 구성된 라이브러리
해당하는 모듈을 제공하는 라이브러리가 있을 것.
이걸 내가 개발하고 있는 프로젝트에 넣어서 기능 구현을 하면 됨.

현재는 내가 사용하고 있는 프로젝트에 XML파일 등을 이용해 코어 모듈들을 사용한다고 명시만 해놓으면
프로젝트가 알아서 해당 라이브러리를 다운로드 받는다! 이렇게 되면 더 이상 개발자는 라이브러리를 임포트하는데에 스트레스를 받지 않아도 된다는 뜻.

필요없다면 필요없는 모듈은 언제든지 떼어내도 됨.

*스프링 컨테이너 IoC
(생소하고 낯선 용어들이 나오겠지만 이러한 것들이 계속해서 나오고 이러한 점을 깊숙이 파보는 시간이 될 것. 낯선게 나와도 그냥.. 이런게 있구나. 하고 넘어가자. 계속해서 짚고 또 짚어가며 가자.)

OOP Obejct Oriented Programing
코딩을 하고 컴파일을 하면 이에 필요한 객체가 나옴.
객체엔 객체를 구성하는 속성과 기능이 들어간다.
객체: 하나의 오브젝트라고 부름.

스프링도 하나의 객체를 만들고 필요할 때마다 객체가 가지고 있는 속성과 기능을 사용하면 된다.

스프링에서 객체를 생성하고 조립하는 컨테이너(container)로, 컨테이너를 통해 생성된 객체를 빈(Bean)이라고 부른다.

XML문서		→	    스프링 컨테이너[빈(Bean)생성 및 조립)]	→	개발문서
1)객체생성 및 속성 데이터 작성  2)스프링 컨테이너에서 객체 생성 및 조립		3)에플리케이션 구현
				<담겨있는 객체들>

예시로 계산기를 만드는 프로그램을 봄.
calculator라는 인터페이스 데이터 타입으로 객체를 만드는 모습. : 컨테이너의 개념

MainClass
MyCalculator 안에 있는 또 다른 객체
그 객체를 주입해주는 것.

MyCalculator <... Calculator 객체(해당 객체가 덧셈,뺄셈,곱셈,나눗셈에 따라 result()가 달라짐)
스프링 컨테이너를 따로 만들어서 서로 join하거나 주입하는 것.

모든 프레임워크가 그렇듯이 필요한 많은 기능들을 추상적으로 구현해놓음.
이 틀을 이용해서 개발자는 이를 이용해 쉽게 기능 구현을 할 수 있다.

/*3강*/
스프링 프로젝트 생성 with maven

*프로젝트 생성
1. Maven Project with Maven

GroupId	:프로젝트를 감싸는 큰 그룹.
지하철 관련 프로젝트를 한다면
1~9호선까지 있다면
-전체 호선에 대한 프로젝트 <... GroupId
-각 호선에 대한 프로젝트 <... Artifact id

/*GroupId, ArtifactId 설정을 위해 Create a smiple project(skip ~ ) 부분을 클릭하고 넘어가야 생성
GroupId, Artifact 입력하면 됨.

생성 뿐 아니라 몇 가지 설정을 해줄 것이 있다.

*pom.xml
Spring의 각 모듈을 사용하게 될 것.
core
jdbc
webmvc
aop
등등..
dependencies
	dependecy

자바나 JSP는 간단하게 만들 수 있음.
DB와 같은 부분에서 어려움을 겪을 수 있음.

스프링은 프로젝트를 만들 때 부터 많은 어려움이 있음.

프로젝트 폴더 > src > main > java, resources

java: 기능구현
resources: 프로그램 진행을 위한 자원들

*폴더 및 pom.xml
1. java 폴더(lec03Pjt001/src/main/java)의 경우 특별한 것은 없고, 앞으로 만들어지는 자바 파일들이 관리되는 폴더이다.
2. resources 폴더(lec03Pjt001/src/main/resources)의 경우 자원을 관리하는 폴더로 스프링 설정 파일(XML) 또는 프로퍼티 파일 등이 관리된다.
3. java, resources 폴더는 스프링 프레임워크의 기본 구조를 이루는 폴더로 개발자는 이대로 폴더를 구성해야 한다

빌드할 때 메이븐이 막 빌드를 하는데.. 이때 저 디렉터리 경로를 맞춰주어야 합니다.

*폴더 및 pom.xml 파일의 이해
pom.xml 가장 신기하면서 효율적인 부분.

스프링 프레임워크 모듈을 지원해주는 것..!
라이브러리들이 (repository) 원격지 어딘가에 있음.
플젝1이 라이브러리 1번, 3번을 원한다면.. pom.xml에 명시를 해두면..
(내가 사용하는 pom.xml에다가 라이브러리1번, 3번(모듈 1,3번)이 필요해! 라고 명시해두면)
자동으로 내컴퓨터로 다운로드 되어서 해당 라이브러리를 손쉽게 사용할 수 있게된다. 

플젝1 플젝2 플젝3(스프링 프로젝트)

외부의 메인 레파지터리에 있는 라이브러리를 내가 개발하고 있는 프로젝트에 다운해주는 역할!
한번 받아놓으면 메인으로부터 다시 받을일이 없기에 훨씬 효율적으로 할 수 있음.
앞으로 내게 필요한 모듈들을 설치해두면 알아서 메인메모리에 저장됩니다.
해당 라이브러리들이 어디에 있는지도 쓰여있음.

