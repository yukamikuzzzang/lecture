객체 지향 언어로 기능을 부품화
내가 만든 것. 옆에 사람이 만든 것. 다른 사람이 만든 것.
연결연결해서 하나의 프로그램을 만들 수 있다는 것.

자전거 자체를 바꾸기 보다 안장이 필요하면 안장을 바꾸고..
자전거에 대한 업그레이드가 진행

JRE만 있으면 어떤 OS에서든지 돌아간다.

GC:Garbage Collector
C는 직접 메모리를 관리(접근 가능)
Java는 메모리 접근불가. Java가 판단하고 GC가 가져감.
반환 모션이 필요없다.

JDK Java Development Kit
JRE Java Runtime Environment(Java 실행환경)
API (JVM이 일할 수 있는 기능들)
JVM Java Virtual Machine(실제 실행되는 곳)

JRE, OS 별로 따로 있다.

Java SE 다운로드

메모장으로 하는 경우는 거의 없음.
IDE Integrated Development Environment, 통합개발환경 중
이클립스를 사용해볼 것임.(무료)

A에서 코딩, B에서 컴파일, C에서 실행... 한 것들을 하나로 통합.
eclipse.org에서 다운 받을 수 있음
install 버전(레지스트리에 묶인다는 점, 무거워짐), zip 버전(가벼움)

이클립스 공간 구성
프로젝트 익스플로러: 프로젝트와 코드들을 보여주는 역할
project explorer

가운데 넓은 부분: 코딩하는 부분
*우측
관계같은 것도 확인가능
task list: 기능들이 어떤 역할을 하는 지 봄
*하단
서버 생성 및 실행, 디버깅,...

new!
Java Project 생성
프로젝트 이름은 일반적으로 소문자로 시작.
(프로젝트 이름 정도만 정하자.)

Perspective를 자바에 맞춰 화면 구성을 다시 구성해주기도 함.
task list, outline은 잠시 접어두고 하자.
project tesk가 만들어짐을 알 수 있음.

src? 코드들을 저장하고 있는 폴더
bin? binary 컴퓨터가 이해하는 파일들이 모여있음
아직은 잘 몰라도 클래스를 선택!

MainClass 설정
(Window > General.. Font 설정)
프로그램 사용시 네이버에서 제공하는 나눔고딕코딩 폰트를 배포 중!
한번 써보세염.

main (Ctrl+space) 
메인메소드란?
컴퓨터 이렇게 많은 파일들을 던지면 어떤 것 부터 시작해야하는지 모름
수많은 것들 중에 MainMethod에 있는 것이 먼저 시작된다.

main(Ctrl+Space)
public static void main(String[] args)
프로그램의 출발점을 지정해주는 친구.

System.out.println("");
시스템에 무엇인가를 출력하는 기능.

이런 것 하나도 프로그램!
Ctrl+S 저장만으로도 컴파일이 완료됨.

클래스? 패키지? 메인메소드? println?
보다 오늘 중요한 것은?

프로그램: 내가 개발한 것을 컴파일하여 기계가 이해할 언어로 만든다.
이클립스로 메인메소드, sysout으로 출력하기.
(뭔진 몰라도 손에 익힐 수 있도록 하자.)
(손에 익히지 않고 넘어가면 반드시 문제가 생길 것이기에..)

실무에서도 개발환경을 구성하는 것이 만만찮게 시간이 들어감.
입문자에게 중요한 것..!
직접 해봄으로서 손에 익히기를 바래요.