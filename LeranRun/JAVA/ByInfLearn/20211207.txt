/*2강*/
hello JavaWorld~
환경변수

java.exe	>JVM 구동 명령
javac.exe	>컴파일러 [소스를 기계어로 바꾸어주는 친구]

컴파일로 .class를 만든 뒤 이를 실행하는 java.exe
이를 사용하기 위해 환경변수를 설정해줄 예정

-사용자변수
특정 사용자의 한하여 사용하는 변수

-시스템변수
PC를 사용하는 모든 사람이 쓰는 변수

*JAVA_HOME 환경 변수 추가
(추가할 땐 복붙하기)
~\jdk.... 까지
javac.exe, java.exe를 다른 디렉터리에서도 사용할 수 있도록 하기 위함.

*Path도 설정해주기
Path는 bin까지 설정해주기

어떤 디렉터리에서든지 java.exe / javac.exe도 가능
java -version으로 확인.

*java 컴파일러와 JVM

java 소스[메인 클래스](.java) > 바이트 코드 파일(.class) >  
[개발자의 영역]

>기계어 > 실행
LINK(기계어 + 실행): 메모리 로딩 / 실행준비 / 실행결정 / 초기화
(C계열 또한 위와 비슷한 과정으로 실행됨.)

이클립스는 위의 과정을 모두 할 수 있는 공간을 제공
처음엔 아주 무식한 방법으로 해보자. with 메모장	

JVM이 가장 먼저 찾는 메인 메소드
(저장할 땐 .java)

					
javac.exe JavaWorld.java
컴파일을 하면 .class파일이 나온다..!
java.exe JavaWorld

이렇게 하면 우리가 원하는 것이 나와요~

'''
Microsoft Windows [Version 10.0.19042.1348]
(c) Microsoft Corporation. All rights reserved.

C:\Users\SYS>cd Desktop

C:\Users\SYS\Desktop>javac.exe JavaWorld.java

C:\Users\SYS\Desktop>java javaWorld
Error: Could not find or load main class javaWorld
Caused by: java.lang.NoClassDefFoundError: JavaWorld (wrong name: javaWorld)

C:\Users\SYS\Desktop>java javaWorld
Error: Could not find or load main class javaWorld
Caused by: java.lang.NoClassDefFoundError: JavaWorld (wrong name: javaWorld)

C:\Users\SYS\Desktop>java JavaWorld
Hello Java World!!

C:\Users\SYS\Desktop>
'''

코딩을 하는 부분
컴파일 하는 부분
실행하는 부분까지 다 해준다!

*가비지 컬렉터 Garbage Collector
C계열 프로그램 vs Java 프로그램
C계열 프로그램
개발자가 직접 메모리 관리
메모리 관리를 잘못할 경우
메모리 누수 + 타 프로그램 동작이 멈출 수 있음

Java 프로그램
개발자가 메모리 접근불가
따라서 개발자는 메모리 관리 할 수 없고,
가비지 컬렉터가 불필요한 메모리 회수
>메모리 최적화!

메모리를 3칸 중 2개를 사용중...
사용을 마치면 가비지 컬렉터가 이 둘을 회수한 후
다시 재활용, C에서는 이 작업을 직접 다 해주어야함.

*프로그램의 생성방법
*소스를 컴파일 하고 자바 파일을 실행시켜주어야한다.
*이 과정을 쉽게 해주는 이클립스 같은 IDE!

/*3장*/ 변수
*메모리에 데이터를 저장해 재활용하는 법을 학습
자바를 이용해 실제로 어떻게 코딩해야할지에 대해 알아보자.

-변수란?
-변수 선언 초기화
-메모리할당과 진법
-변수 데이터 변경

*변수란?
데이터(자료)를 임시로 담을 수 있는 상자(메모리공간)

A학생,B학생,C학생의 점수를 저장해 가감승제하여 다양한 자료를 얻을 수 있도록 해줌.

int i = 10;

PC 상의 메모리 중 한 공간을 i로 정의
그 i 안에다가 데이터 10을 담음. <like 상자>

int j = 20;

int? 자료형! 
상자안에 담겨있는 형태(데이터의 형태)
정수인지, 실수인지, 문자인지, 문자열인지..를 명시해줘야함.
PC는 이런 것까지 꼭 지정을 해주어야함.

변수: 데이터를 담고 있는 상자!

*변수 선언과 초기화
선언부:자료형+변수이름
int i 

변수를 선언했다! = 값은 없지만 메모리의 특정 공간을 만들어놓은 것.
오른쪽에 있는 값을 왼쪽 변수에 대입해준다.

int i =(대입/할당 연산자) 10(변수값);

메모리의 공간을 i로 선언했는데,(공간확보)
10을 넣음
...> 변수의 초기화

java에선 한 문장이 완결되었을 때(마침표 찍듯이)
세미콜론을 찍어주세요.

-변수 선언 후 초기화 진행
int i;
i = 10;
System.out.println("i="+i);

-변수 선언과 초기화를 동시에 진행
int j = 20;
System.out.println("j="+j);

이클립스에서 진행>>
>>돌아옴

변수 앞에 보면 데이터형, 자료형을 명시

숫자(정수, 실수(소수점 etc))
문자(a, 하나의 단어)
문자열(abcd...)
, ....

자료형에 따라서 정수냐 실수냐, 문자냐, 불린이냐(참, 거짓)에 따라
상자(변수)의 크기가 결정됨.

-int 자료형은 메모리에서 4byte 공간은 차지함. (32bit)
(1byte = 8bit)

i에다가 10이라는 걸 대입하는 순간
10으로 들어가는 데 이때 2진수(0과 1만 아는 컴퓨터)로 들어감.

int i = 10; > 10진수 --- 2진수
(수학적 연산이 필요한 부분은 찾아보세요. C에 경우 특히 필요함..)
(계산기에서 프로그래머용으로 바꾸면 16, 12, 10, 2진법으로 확인할 수 있음)

10 = 1010(2)

자료형으로 방을 확보
값을 넣을 땐 binary로 변환되어 들어감

*변수 데이터 변경
변수에 저장된 데이터는 언제든지 변경할 수 있다.

이클립스 참조

*변수를 쓰는 이유?
잠시 영상을 멈추고 생각해보아요.
(연산을 함에 있어서 계속해서 상태가 변하기 때문에?)

A: 재활용하기 위해!

학급성적을 담아놓음 > '학급성적'
반의 총점! : A + B + C
반의 평균! : (A + B + C) /3
최고점! : A > B B > C C>A
...

굉장히 복잡한 프로그램을 짰다고 한다.
5시마다 알람을 맞추는 사람이 있다면..
5시라는 변수하나만 있어도 알람을 잘 맞출 수 있다.
(맞출 때마다 수를 만들 필요가 없음.)

자료형에 대해서 알아보자! 