/*4장*/ 기본자료형
변수의 데이터를 담아 재활용한다..!
변수를 선언하는 법, 변수를 초기화하는 법을 배움..!

데이터가 메모리에서 차지하는 크기에 대해 학습

-기본자료형, 객체자료형
-Java 기본자료형
-형 변환

*기본자료형, 객체자료형
데이터가 변수에 직접 저장되는 기본자료형
객체 메모리 주소가 변수에 저장되는 객체자료형
(중요한 내용)

메모리
int i = 10;
[10] <<일정 공간에 데이터 저장
< i >

-메모리에 직접 데이터가 저장되는 것: 기본자료형
(정수, 실수, 문자, 문자열, 불리언(참,거짓), ...)

-객체자료형
(객체는 잘 모르지만..)
계산기, 자전거 같은 객체들도 변수에 담을 수 있음.
객체를 가리키고 있는 i라는 친구를 만듬.
i의 값이 바로 들어가는 것이 아닌 그 객체를 가리키는 다른 메모리 공간을 잡음. 다른 공간안에 있는 값은 이 객체가 존재하는 메모리 주소값.

실제 객체가 들어있는 '주소'를 가르킴. 
이 <메모리> 주소를 담는 자료형이 객체 자료형.

[치킨](객체) <------ [치킨집주소](객체)

C계열에선 포인터,  Java에선 레퍼런스라 불림.
항상 레퍼런스의 크기는 4byte로 고정(16진수의 주소만 들어가기 때문)
기본자료형의 경우 들어가는 값에 따라 부여되는 크기가 달라짐.

*기본자료형

정수형 	*byte =  1byte(8bit) +127 ~ -127(256)
	(200이상의 수 부여 불가 : overflow)
	*char = 2byte
	(문자인데 왜 정수?, 컴퓨터가 바이너리값만 이해(0,1)하기에
	문자를 아스키코드와 같은 숫자로 표현하기 때문.)
	*short = 2byte
	*int = 4byte(32bit, 실생활에서 쓰는 대부분의 숫자를 포함)
	*long = 8byte(64bit)
	[char, int가 그나마 많이 씀. int는 정말 많이 씀.]	
실수형	*float = 4byte
	(소수점 밑까지 포함)
	*double = 8byte
	(소수점 자리에 대한 구애를 많이 받지 않음)
	[double을 많이 씀.]
논리형	*boolean = 1byte
	(C에선 0이아닌 나머진 참.)
	*(Java에선 True, False)
	[boolean도 그나마 쓰는 편]

*기본자료형 특징: 소문자로 쓰여짐
문자열	String str = "ABC..";
	String은 객체자료형이기에.. 앞이 대문자. (4byte로 고정)

이클립스로 실행해보자.
클래스 첫문자는 대문자로 짜는 습관..!

*형변환?
자료형이 변환한다는 뜻.

자동(묵시)적 형변환
//작은 공간의 메모리에서 큰 공간의 메모리로 이동

byte by =10;
//1byte
int in = by;
//4byte
System.out.println("in = " +in);

by는 더 큰 공간에 들어갈 때엔 아무 문제가 없다!
1byte ...> 4byte(int) //자동형변환!
byte by = 10;
int in = by;
System.out.println("in ="+in);

명시적 변환
//큰 공간의 메모리에서 작은 공간의 메모리로 이동
4byte ...> 1byte(?)
int iVar = 100;
byte bVar = (byte)iVar;

//명시적 형 변환은 데이터가 누실될 수 있다!

iVar = 123456;
bVar = (byte)iVar; //명시!
System.out.println("bVar = " + bVar);
(bVar = 64)

형 변환을 해줘야하는 경우가 있음.
처음부터 큰 데이터를 사용함으로서 해결..!

-자료형에 대해서
-기본 vs 객체
-기본 int, double, boolean!
-형 변환

작은 거 > 큰 거(o)
큰 거 > 작은 거(?) 데이터 유실 주의!
