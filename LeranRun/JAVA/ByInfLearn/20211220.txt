/*5장*/ 특수 문자와 서식 문자
일반적으로 쓰는 게 아닌 특정 서식에 맞는 문자를 사용하는 방법..!

*특수 문자

\(역슬래시, 원화로 나오기도 함)

\t	탭		탭 = 스페이스바 4번
\n	줄 바꿈
\'	작은 따옴표
\"	큰 따옴표
\\	역슬래시		역슬래시가 출력됨.

*주석
컴파일러가 컴파일하지 않고 무시하는 언어

// 특수문자 (슬래시 2번) >> 한줄 주석
>주석을 없애면 에러가 뜸.
Unresolved compilation problems: 해석할 수 없는 문제가 뜨기 때문에
Ctrl+S를 누르는 순간 .class파일을 컴파일 하지만 주석은 컴파일하지 않음

/*
* 여러 줄 주석
*/

디버깅 기능으로 써도 사용하고 어떤 커멘트를 달아놓을 때에도 사용.

*서식 문자
일반 문자가 아닌 서식에 사용되는 문자

printf() 메서도 이용
f : format

%d 10진수
%o 8진수
%x 16진수
%c 문자
%s 문자열
%f 실수

System.out.println(""); 	//한 문장 출력 후 개행도 해줌
System.out.println("%d",10);	//출력만 하고 개행을 하진 않음. (\n)

System.out.println("%d학년 %d반 %d번",6 ,2 ,10); //6학년 2반 10번
(순차적으로 들어간다는 점..!)
계산기에서 16진수, 10진수, 8진수로 나타낼 수 있음.
프로그래밍엔 문제가 없음

*서식 문자의 정렬과 소수점 제한 기능
//서식문자 정렬 기능
~printf("%d\n",123);
~printf("%d\n",1234);
~printf("%d\n",12345);

~printf("%5d\n",123);
~printf("%5d\n",1234);
~printf("%5d\n",12345);
//다섯개의 공간을 만들어놓고 오른쪽 정렬

//서식문자 소수점 제한 기능
~printf("%f\n",1.23);
~printf("%.0f\n",1.23);	//소수점 1번째
~printf("%.1f\n",1.23);
~printf("%.2f\n",1.23);

많이 나오진 않지만 약방의 감초!
가끔씩 쓰이곤 한다. 안쓰면 잊어버리기 마련
구글링을 통해 다시한번 떠올리는 기회가 되기를.

특수문자 + 서식문자
빈번히 쓰는 기능은 아니지만 모르면 안되지.
한 번씩만 코딩해보면 금방 쉽게 습득할 수 있을 거라 생각합니다!


출력문에 굳이 그대로 값을 때려넣지 않고 복잡하게 하는 이유?
실시간으로 변화하는 값에 대응하기 위해서. (변수와의 콜라보!)

+Tip
%출력의 경우 printf에선 포맷으로 인식하기에
%% ..> %문자가 출력된다.

double d = 1.34234d;
float f = 1.3342f;
하는 이유는 컴파일러가 float형을 double로 인식하는 걸 방지하는 차원
실수 끝에 f를 붙이면 float형 변수로 인식.
double d도 마찬가지.

String 문자열
Char 문자

Char 문자 1개. 실제 값이 있음.
String 문자열. 실질적으로 좌표만 가짐.

String ==으로 비교 불가(실제 값이 없음) / .equals()를 사용하여 해결.
Char는 가능.