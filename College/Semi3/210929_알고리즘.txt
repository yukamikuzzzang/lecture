오늘은 진도를 좀 나가고
다음주엔 시험과 관련한 이야기들을 할 예정.

<1>
버블 정렬, 선택 정렬, 삽입 정렬, 쉘 정렬, 기수 정렬. 퀵 정렬

퀵 정렬: 피벗을 기준으로 나누어 진행.
비교해가며 합쳐가는..

퀵: 문제를 2개로 분할, 부분 문제의 크기를 일정하지 않은 크기로 감소하는 알고리즘
이진탐색: 상위에 있는 부모에 대해 조건에 맞게 알고리즘을 짜는 것.

1. 퀵 정렬
2. 선택 문제 알고리즘
	문제를 분할하여 특정 위치에 있는 것들을 찾아줌.
	삽입 정렬, 피보나치 수의 계산 등등..

피봇을 잡는 것, 보내는 방법들에 따라서 처리속도가 달라짐.

QuickSort(A, left, right)

A: list
분할을 지속하다보면 left == right인 시점이 옴.
1. 피봇을 A[left]~A[right]에서 선택

[        P       ]
[   P   ][   P   ]
...

피벗을 0번 자리로 이동시킨 후
값을 비교해나감.

Low(왼)방향 쪽에 있는 값 중 피벗보다 큰 값
High(오)방향 쪽에 있는 값 중 피벗보다 작은 값을 골라
이 두 값을 바꾸어나간다.

<2~3>
지난 시간에 했던 방법
리스트의 중간값을 찾아서 피봇으로 취급하고 이행.
	- 랜덤하게 선정하는 방법
	- 3 숫자의 중앙값을 선정하는 방법
pivot = A[left]
피벗을 어떻게 선정하느냐에 따라 프로그램의 효율성을 추릴 수 있음.

선택 문제 알고리즘
선택 문제? 
n개의 숫자들 중 k 번째 작은 숫자를 찾는 문제
	(1) 이미 정렬이 되어 있다면 분명 더 빨리 찾을 수 있음.
	(2) 정렬을 하지 않는다면 피봇 값을 부여하여 양쪽을 나눠가며 찾아감.

-단순한 알고리즘
최소 숫자를 k번 찾는다.
<이진탐색 / 선택문제>

Selection(A, left, right, k) 'k!'
피봇을 A[left]의 자리로 바꿈
피봇과 배열에 들어있는 요소를 비교
피봇보다 작은 숫자는 왼쪽에 큰 숫자는 오른쪽으로 보내어 파티션

S = (p-1) - left + 1 #S: small group
if(K<=S) Selection(A, left, p-1, k)

[다음주 예고]
/*최소 신장 트리, 최단 경로 찾기, 부분 배낭 문제
집합 커버 문제, 작업 스케줄링, 허프만 압축*/

동전 알고리즘? : 그리디 알고리즘
동전 거스름돈 문제 해결의 가장 간단하고 효율적인 방법

거스름돈 단위:100 500 1000 5000 10000
금액을 받고...

while(x>=10000):
change= change-500,n500++
....

최근접 점의 쌍 찾기
가장 가까운 곳에 주유소를 찾는다던 거 할 때 쓰는 방법..
수많은 점들 중 점의 영역을 나눠놓고..
각각의 점의 위치를 구해서 가장 짧은 값이 있는 곳을 골라주면 된다.

점을 나누다가.. 가까운 점들 간의 사이를 그어버릴 수도 있음.

1. 취합하기 전에 중간영역을 고려해야 한다.

중간 영역 안의 점들.
중간 영역 안에 있는 점들 중에 더 근접한 점의 쌍이 있는지를 확인해야.

근접한 점들을 어떤 식으로 추려야하지..?
X좌표, Y좌표
좌표들이 오름차순 혹은 내림차순으로 정렬되어있다고 할 때
정렬되어 있는 것들 간의 데이터들 사이의 길이를 구해야한다.

가운데에 있는 점에 d=10 (distance)만큼 빼주고
그 옆에 있는 점에 d=10(distance)만큼 더해주고

점이 3개 이상은 있어야..

2개 뿐이면 다른 것들과 비교 자체가 불과.

시험?
이번주부터 내야한다고 함.
비중을 둘만한 것은 아니여서?
쉽게 내볼까 하는데 알고리즘 자체가 쉽지 않음.
교재도 없고.. 알고리즘을 파이썬으로 구현해보는 것으로 수업을 진행해왔음..
버블이나 선택을 시험으로 내기에도 애매하고..
학점은행제이기에 시험을 보긴 봐야하는..

어쨌든 시험은 봐야하니
유인물을 만들어와서 유인물 안에 있는 키워드를 통해 그 부분에서 시험을 낼 예정.
시간복잡도를 내기도 안내기도 애매하지만..
힘들지 않는 범위 내에서 문제 낼 예정

16 + 5 (객관식:주관식)
다음주와 다다음주까지 시험 낼 예정

1,2,3,4 + 6장
정렬부분은 우리가 시험을 했던 부분에서..
레포트를 준비해서 정렬부분 중 하나를 선택해서 이를 심도있게 작성하여 레포트를 제출해주세요.
(적어도 5장 이상 + 프로그램 추가 가능 + 거기에 해설을 달거나 + 예시 같은 것들 + 다른 언어로 변형하여 분석한다던가..)

제목은 다음주에 레포트 제목 + 평가방법등을 기재할 예정.

