(1)이번까지 배운  것이 시험범위
비밀번호를 못읽게 만들려면..
자기의 비밀번호를 만드는 와중에 제대로 적용이 안되는 경우가 있음.
/etc/password/..

비밀번호 지정방식
centOS8
SHA-512를 쓰는 것.
id1자 솔트16자..

miku:$6$M.LpsVXBc811hU0a$h7hYWsE7/ZObCgWSpWQdRoLI.dWSeELG.X9UQn6L4feTPH.SneOSJLChPPc9xzMQC4bOA2nc/UILZgiT.1H6J.:18716:0:99999:7:::
이것이 무엇을 나타내는지 볼 것임.

/etc/shadow 파일(콜론(:)으로 구분)
18716: 최종비밀번호 변경일>1970년1월1일 부터(컴퓨터최초탄생일 기준으로 계산)
0: 비밀번호 변경 최소 일수
99999: 비밀번호 경고 일수 > 

change 유틸리티
시스템 관리자가 사용자의 비밀번호를 편리하게 관리할 수 있게 해주는 도구

chage -l black (조회)

일반회사는 90/ 쇼핑몰사이트는 6개월..
리눅스마스터 1급에서 나오는 chage

 /etc/pam.d/system-auth
/etc/security/pwquality.conf
/etc/login.defs

비밀번호 조건을 좀 더 강화시키는 것.

su:

일반 사용자가 root 권한을 갖는 su 명령어를 사용할 수 있는 이유는?
su 명령어의 접근권한 때문


set useid가 적용되어있기 떄문..
그룹을 먼저생성해야 사용자 계정을 만들 수 있다.
1차 그룹
ls -l  /home > 1차 그룹
groups '사용자계정'
wheel에 등록되어 있다면 어디든 조작할 수 있다는 점.

[root@localhost ~]# groups miku
miku : miku wheel

/etc/group에 직접 적용해도 됨. (with vi)
사용자가 속해 있는 그룹 확인하기

group 사용자계정
groupdel abc


(2)절대경로도 꼭 기억해주어야 할 내용
/etc/fstab << single모드로 건드릴 수 있는 유일한 것, 잘못 건드리면 부팅이 안될 수 있다.

/dev/mapper/cl-root     /                       xfs     defaults        0 0
UUID=bec079a5-e207-404b-832f-9dc0821981c2 /boot                   xfs     defaults        0 0
/dev/mapper/cl-swap     none                    swap    defaults        0 0

xfs(윈도우 NTns, fat 32 etc..)

맨앞 장치명:
/dev/mapper/cl-root    

파일시스템의 마운트 될 마운트포인트(현존하는 디렉토리)
 /  /boot 
(마운트 하려면 디렉토리를 먼저 만들고 실행해야..)

옵션 설정
xfs  
파일-시스템 파일

defaults: (예에 대한 내용)
	파일시스템을 read only로 마운트할 것인가?
	파일시스템을 read, write로 마운트할 것인가?
	Quota 정책을 적용할 것인가? 
		Quota:일하는 이에게 일정량의 저장소를 대여	
	일반사용자도 마운트할 수 있도록 허용할 것인가?
		마운트: 연결(컴퓨터에 꽂아서 연결하는 것.  <>  (그 반대는)리마운트
	부팅시 자동으로 마운트를 할 것인가?
	SetUID, SetGID 설정을 허용할 것인가? << 함부로 허용하는 거 아님..

여기있는 옵션들을 거의다 허용할 것이라면 default
그게 아니면 다 따로 설정해주어야..

fsck >>파일 시스템의 무결성을 체크할 때 쓰는 것.
 
예전엔 장치명으로 표시했다면 지금은 label로 바꿈.

t3는 ext4의 확장팡
저널링 파일 시스템
설치하는 도중에 안되면 처음부터 다시 깔아야하는 상황을 이겨냄.

sysfs System Filesystem
proc 커널이 메모리 상에 만들어 놓은 것. 메인메모리에 존재하는 것이라 컴퓨터 재기동시 날아감.

8409221 anaconda-ks.cfg  9197121 fstab  9197123 initial-setup-ks.cfg
저기 숫자로 쓰인 부분이 inode

xfs는 사용중인 inode만 체크하므로 빠른 속도를 낼 수 있음
동일 크기의 파일을 삭제하여도 ext3보다 2.5배 빠른 속도를
제공

TNFS > FAT? 에러..
xfs_growfs 유틸리티를 통해 마운트된 상태에서도 파일 시스템
확장 가능
파일시스템 생성(포맷) 시간이 타 파일시스템에 비해
압도적으로 빠름

디스크 관리할 떄도 포맷할 수 있다고.. 빠른 포맷이 가능.
xfs는 사용중인 파일들의 inode만 체크
(구글에선 exts? fs를 쓴다고도 함.)

단점
-대용량 위주 파일시스템이다 보니 작은 사이즈의 파일에선 되려
-속도가 느린 부분이 있음
-디버그 옵션이 존재하지 않아 삭제된 파일은 복구가 불가능
-파일 시스템이 깨졌을 때 xfs_repai를 실행시 물리적 메모리나 swap이 2TB당 1GB이상이 되어야 repair 실행이 가능
	깨진 내용이 1기가 이상은 되어야 repair 가능
	시스템이 아닌 별도의 데몬에서  파일 시스템 관리
	파일 시스템이 꺠지면 안돌아가지만 복구시킬 수 있다고 함.
	
	xfs 커널이 아닌 *데몬(서비스)에서 돌아가기에
	이 서비스가 죽어버리면 복구가 안됨.

	잘못 죽이면 큰일난다는 것을 의미.

/etc/fstab

quota 누구나 30기가씩 용량부여 같은 느낌.

defaults 주지 않는 이상 다른 설정들도 다 고쳐야..

(3)
fdisk -l

************(중요)
/dev/sda1  *       2048  2099199  2097152   1G 83 Linux
/dev/sda2       2099200 20971519 18872320   9G 8e Linux LVM

sda1 Boot * 부팅디스크에 별표 되어있음, Linux Type
sda2 Linux LVM SYSTEM

논리적으로 디스크를 분리해서 수업함.
디스크 용량이 크면 파티션을 나누죠..
100기가 짜리를 알아서 나누어준 것.

sdb
sdc 에 디스크를 추가해서 연습해 볼 것임.

/ >sda2
/boot > sda1
부팅 차이로 어떤 디스크인지 따지는 것.
실질적인 디스크 장치 또한 확인할 수 없음. cat /etc/fstab만으로는..
그래서 fdisk -l을 통해 찾아볼 수 있다고..


UUID=bec079a5-e207-404b-832f-9dc0821981c2 /boot 

/dev/sda1 (device밑 sda1, ext4파일 시스템, defaults)

rw, nouser, auto, exec, suid <defaults
1 > dump가능
2 부팅할 때 fsck에 의해 점검되는 파일시스템(우선순위)


ls /
백업 디렉토리가 필요<현존하는 디렉토리여야되기 때문에..>
mkdir /backup
mkdir /cdrom

마지막줄
vi fstab
LABEL=/backup      /backup   xfs nouser, noauto, rw, noexec 1 2


실습.
1) LABEL 명은 /backup, 마운트포인트 /backup, 
파일시스템은 ?, 옵션은 사용자 마운트 불허, 자동마운트
불허, 읽기쓰기 가능, 실행불허, backup 가능, fsck 가능

2) LABEL명은 /CDROM, 마운트포인트는 /mnt/cdrom, 
파일시스템은 ?, 오직 읽기만하고, 자동마운트, 사용자
마운트 가능, 백업불허, fsck 불허

예전엔 0 0이 아닌 1 ? 였었는데..
시스템이 아닌 데몬과 같은 다른 곳에서 관리하나 봄.

(시험범위는 여기까지)