데이터 사이언스: 데이터 학습/ 시각화
python을 강력하게 만들어준 numpy
python의 배열:list
배열을 덮어쓰는 개념>>>numpy
numpy형 자료형을 지원함.

실수는 아직은 시기상조

arr1 = [[1,2], [3,4,5]]
arr2 = [[0,1,2], [3,4,5]]

narr1 = np.array(arr1)
narr2 = np.array(arr2)

print(narr1)
print(narr2)

numpy
n*n의 딱딱 떨어지는 배열을 매트릭스 형탤 만든다.
shape을 익히자.

narr = np.array([[1,2,3],[4,5,6]])
print(narr.shape)
-> (2,3)

1차원 배열을 2차원을 만들려면
꺾쇠를 한 번더 쳐주면 된다.

3차원 배열?
잘쓰지 않는다고 생각하지만..
텍스트, 숫자, 이미지(컴퓨터에서 많이 쓰는 자료들)
RGB..!

이미지에 대한 값을 익히게 하려면 필요..

Reshape
데이터들은 메모리 상에서는 일련의 데이터
(다만 우리가 다른 차원으로 접속할 뿐.)
따라서 모든 데이터는 모두 1차원화 시킬 수 있다.
numpy는 이들은 모두 1차원화시킬 수 있다.

Reshape에 대한 개념에 대해 익숙해지도록 하자.
배열의 범위지정

print(a[1:4])
a[1]a[2]a[3]

a[-1] 가장 오른쪽에 있는 것.
이 슬라이스 작업을 2차원에서도 적용한다는 점..!

nar[::]
열로써 값을 긁어낼 수 있음

cpu가 알아서 돌릴 수 있음.
무엇보다 for문보다 처리속도가 더 빠르다.

행렬.
narr = np.zeros((10,10))
#연습문제 1-1 을 여기에 작성해보세요
#narr[1:9,1:9] = 1
narr[1:-1,1:-1] =1
#narr[2:8,2:8] += 1
narr[2:-2,2:-2] +=1
print(narr)

*행렬이 여기서 나오누..


