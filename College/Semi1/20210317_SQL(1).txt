scott 스키마(구조와 제약조건)에 대해서 살펴보았었다.
벌써 우리는 5장, 7장을 배웠다.

교재와 약간은 다를 수 있다..
DD:Data Dictionary = 시스템 카탈로그

시스템 뷰	    데이터 뷰
DIctionary > Static Dictionary      >  USER_XXX, ALL_XXX, DBA_XXX, ...
	    Dynamic Dictionary   > V$_XXX
                퍼포먼스 뷰(다이나믹..)

NOT NULL(>Constraint로 안보는 DB들도 있다.)
UNIQUE
PRIMARY KEY
FOREIGN KEY
CHECK (NOT NULL, ...)

이름만으로 제약조건을 추측하지 말고...
Constraint_name, constraint_type, table_name, serarch_condition(확신할 수 있는 값이 어떻게 저장되어있는지 알아야함.), r_constraint_name
해당 키값을 지울 때 생기는 쓰레기 값을 지우기 위해
purge recyclebon해야 한다.

외래키의 진정한 정의
"Parent 테이블을 참조하는 키이다."
"프라이머리, 유니크, 유니크 인덱스가 걸려있는 테이블을 참조할 수 있다. in oracle

위의 상황만으론 실제 제약조건이 걸려있는 칼럼을 찾지 못함.
제약조건을 찾기 위해 조인을 해준다.
조인을 해줄 때에 같은 것이 있는 곳에서 join해주면 된다.

절차적인 언어가 아니기에
자기 역할에만 집중.
(오늘 시스템 함수를 아주 조져버릴 예정)
(조금 걸리는 부분이 있다면 꼭 다시 보고 넘어가야한다고)

단일형 함수를 공부해야하는데
일단 세가지 타입으로 나눠보자.,,

바이너리 이런 건 나중에 생각해보고

문자/ 숫자/ 날짜
여기에 각각의 function을 굳이 찾아볼 필욘 없다.
문자 upper, lower, length, concat, substr, lpad, rpad, ltrim, rtrim
숫자 round, trun
날짜 sysdata

어차피 데이터들의 형태는 사용자들의 input, output에서
implicity가 일어난다..!
(묵시적 변환)

to number <>. to_date

