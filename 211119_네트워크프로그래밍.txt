signal > 사용자 통신, 커널, HAL, H/W > 전기적 신호(0 or 1)
계속해서 커널에 데이터로 변환

interrupt
CPU에게 

signal
하드웨어적인 기본 관념을 따라 메세지/시그널
<엄연히 따지면 시그널이 아니라고 함.>

WaitForSingleObject
Mutex 소유권을 요청
쓰는 사람이 없다면 커널에서 할당
가운데에서 수용..

WaitForSingleObject  - INFINITE(timeout)
return 값을 받아 타임아웃인지 권한을 받았는지 확인하는 구간이 필요.

메세지를 여러군데에 받아서 접속하는 것이 필요.
clntSocks
Lock & UnLock
Release에서 권한을 넘겨줌.
Socket을 파라미터로 넘김

void * 
hClntSocket? > integer : HANDLE
font를 넘겨줘야하는데.. void* 니까..

void * > SOCKET * > 값 > RECV
WaitForSingleObject

Send할 땐 무슨 일이 일어나면 안되니까..
send할 때 LOCK with hMutex

send메세지가 끝나면 다시 LOCK을 건다고 함.

S2를 배열에서 제외하고..
clntCnt --

i = 2,3,4,5,6 ...

과제
*채팅프로그램을 꾸며보세염
해당 범위 내에서 추가 코드를 넣어서 최대한 꾸며보세요
ex 닉네임을 쓸 수 있다던가 etc...

기능을 더 넣어보던지...

여러 사람이 접속하는 프로그램
어떤 사람이 접속되어있는지 같은..?

*자신과 채팅하는 사용자 목록을 리턴해준다던가...
*방장 개념: 그룹채팅을 만들 수 있음, [소켓 프로그래밍은 아님]

1. 방을 개설...
2. 현재 접속자의 정보를 얻음
3. 초대
4. 그룹끼리만 채팅

서버? 
방을 만드는 요청을 받아서 관리만해주는 방향으로 잡음.

211119~211205
과제게시판에 있는 수치들을 모두 만족할 필요는 없다.

파일io 진행될 때에 다른 활동을 할 수 없기에 
무언가를 하는동안 다른 것들도 진행하자..
지금 구현되어있는 것들은 대부분 비동기식이다.

다른 것들을 클릭하더라도 마우스는 움직일 수 있듯이..
무언가를 진행하더라도 다른 것들을 할 수 있도록 하는 것.
비동기식?
작업이 순서대로가 아닌 동시에 진행된다는 개념. < 개략적 >
동기[서로 순차적으로 진행] / 비동기 [순차적으로 진행되지 않음]

머리를 좀 써야하는 부분이 생김.
1번 > 2번
1번이 시작되고 
동기식이 편리한점
순차적으로 진행했을 때에 잘 진행했는지를 확인할 수 있음.

1. start ... > 1. end
2. start ... > 2. end
끝나는 시점에 signal이 발생했을 때에 별도에 함수를 만들어서 처리할 수 있도록 만드는 것.