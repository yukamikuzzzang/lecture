Base64

바이너리 데이터를 문자 코드에 영향을 받지 않는 공통 ASCII 영역의 문자들


1바이트 중 ascii코드는 128개.
최상위 비트가 1로 되어있는 것 (확장 아스키코드)

확장 아스키 코드는 시스템에 따라 문자를 구성하는 것이 달라짐.
아스키코드는 동일하지만.. 확장 아스키코드는 좀 다름.
아스키코드 안에서 제어문자와 관련된 것들도 일부 다른 것들이 존재.
시스템에 따라 같은 아스키코드를 쓰더라도 달라지는 부분이 생김.

아스키코드 표를 보고 사용할 때 어떤 시스템으로 가든지 항상 변하지 않는 것.
들을 모아놓은 Base64

숫자. 영어 대/소문자
이러한 문자들을 별도로 구성..
Base 64 색인표에다가 만들어놓음.

만들다 끝에 부족한 부분이 있는데...?!
남는 두개는 + / (62,63)

총 64개의 문자.
6비트가 필요.
일반적인 글자를 보낼 때 아스키코드로 보내게 되면.. 97 <1바이트 기준>
Base64 인코딩을 하게 되면..
모든 것이 우리가 필요한 것은 6비트라 하지만 실제 단위는 1바이트로 가야하기에..
(단위 자체는)

1바이트 안에 6비트만 사용
낭비하는 부분이 생김..

부피가 늘어난다해도 이진값을 분명하게 전달할 수 있다는 점.
조금 부피가 늘어난다 할지라도..

데이터를 6바이트씩 나누고...
3바이트로 나누어 떨어지지 않는 경우엔 "="를 사용.

Man

01001001 01100001 01110110
M	 a	  n
010011  010110  000101  110110
T	W	F	u

M	 a	  n	   y
01001101 01100001 01110110 011110 01
T      W      F      u      e     Q  =  =
010011 010110 000101 110110 01110 01[00 00]
TWFueQ==
00 -> '='
딱 맞어떨이지지 않기에 00를 =로 사용

아스키는 8자리
Base64는 6자리

encode / decode
Man > Base64
TWFueQ== > Base64